version: "3.9"

networks:
  webnet:
    name: webnet

volumes:
  traefik_letsencrypt:

services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    command:
      - "--providers.docker=true"
      - "--providers.docker.network=webnet"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.le.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.le.acme.httpchallenge=true"
      - "--certificatesresolvers.le.acme.httpchallenge.entrypoint=web"
      # (опционально для отладки без лимитов)
      # - "--certificatesresolvers.le.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - traefik_letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    networks:
      - webnet

  web:
    build: .
    container_name: fastapi_web
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=webnet"
      # HTTP -> HTTPS
      - "traefik.http.routers.web_insecure.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.web_insecure.entrypoints=web"
      - "traefik.http.routers.web_insecure.tls=false"
      - "traefik.http.routers.web_insecure.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      # HTTPS
      - "traefik.http.routers.web.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls.certresolver=le"
      - "traefik.http.services.web.loadbalancer.server.port=8000"
    expose:
      - "8000"
    environment:
      - TZ=UTC
    networks:
      - webnet